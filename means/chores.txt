 /* Estrucutra para HTTP request*/
Verbose: GET para peticion porque requiero resp.
Libreria: Axios o Fetch.
const axios = requiere('axios').default.
tambien sobre request
pagina GitHub axios: https://github.com/axios/axios
    1. En este repositorio se emplea Promise.all üÜî
    2. metodos de node HTTP, HTTP-2 y HTTPS ???
Nota: HTTP espera que se cumpla la peticion.
      HTTP2. respuestas en paralelo.
      HTTPS. VERSION SEGURA DE HTTP.

/* CONFIGURACION CLI*/
    1. Considerar secuencia de caracteres Shebang.
        #!/usr/bin/env node


/*estructura para validacion de ruta*/
 
- identificar tipo de ruta funcion ValidatePath => mensaje Ruta no Valida. detengo el proceso. buscar node metodo de validacion ‚úÖ

1. Lectura de Path y validar si es absoluta... /crear la funcion que valide el tipo de ruta ‚úÖ
2. Crear la funcion que valide el tipo de ruta si es un directorio o archivo.‚úÖ
    a) Identificar la extension de la ruta.
       
    if (directorio)
        if (2.1 La funcion de recursividad para directorio)
            a) emplear fileSystem (modelo para leer formatos directorio)
            b) Array (arrayMd) donde se guardan los archivos.md.
        else (archivo != .md) => Console.log(no hay archivos .md)
    else if (archivo) 
        2.1 Identificar la extension del archivo.
        if (.md) la funcion de si es s√≥lo un archivo.md
            a) arrayMd donde se guarda el archivo.md
      

